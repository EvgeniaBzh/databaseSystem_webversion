version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dbms
      POSTGRES_USER: dbms_user
      POSTGRES_PASSWORD: dbms_password
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbms_user -d dbms"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://dbms_user:dbms_password@postgres:5432/dbms
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Браузер буде звертатися до localhost:5001
      - REACT_APP_API_URL=http://localhost:5001
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: